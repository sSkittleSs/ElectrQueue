<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxEye.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAGJJJREFUeF7tnQlwVVWax1tBBASBoCjIEhIWCbQQMcgSCYvsayBswYU9ARISCNkI
        IE3jTGlp22Pp9CyONWi30+24Tqvl0lPOWGM7drtM22q3ouO09ijq6Fg9rqDc+f8uOfG+987L2+7Lxv2q
        /hiTe8/y/e+3nXPue99xHCdAB4b1lwE6Dqy/DNBx8O0PgXQ4CQju4NLRCD7Ng9Mb0SlOmOu9bbR7ac8E
        e4mEoM7CGY3oIpwpdBW6NaJ7FJi/cy3gXkA7tGnIb5ektzeCjZK9hEKkIbCHcLbQS+gjZAh9G3GOcG4Y
        +J35O9dyT2+BNmjrLIG26cNGeJuX9kBwOKlYF5aG8nsKEAI5EHaeMEAYKAwShgiZwlAhS8gOA7/jb1zD
        tYMF7qWN8wXahHz6oC/6NFbeLsj2heBrrrnGd0hQGsoLJxXrMoT2FyAys1+/fqNmzZo1e+XKles2b958
        oLy8/K+rqqoeqa2t/WV9ff1vGxoa/nPv3r3v7du37yOgn9/X7/5Lf3tZ1/z77t27H9U9t23ZsuX7a9as
        2Th79uz5AwYMGEPbjX3QVz+BvhlDONku0ba5xEI6pc0RLAm3Vlwv1oP7RMFY1xAInT9//pJNmzYd2Llz
        572QKNI+VBvfCE6q4CFQm6/u2rXrQZF+aMmSJSsaCcfSGYMhm7ExRty4sWrX66gd6xzDkU5pMwRLvMSi
        LJSGpeAisZ7BGRkZo5YtW1ZcVlb2Iyn/Jd13XLASlAZ8rT5fk5X/XVFR0dUDBw78LmNqHBtjJO4bqyZe
        x010OqXVCZZ4XbEhFmWRAGEpmQUFBTO3bdv2F7jT/fv3f6H7bAS0GDSGYxrL7wkDcuXzNEbi+AUCYYN4
        HUG07rPOH6RTWo1giZdY44oNsSgra8WKFVdWVlb+o9zln3SPVdmtDR44ufGfE7cZs0CS5iXauO6oMTqd
        0ioES4w75gmnDDGuGIvNKiwsXK2k5/G2YK0J4Fh1dfW/Kcnb1L179xGaBw8pDytzY45RrTmd0qIES8Ld
        MbUmyRMlSea8efMWk/nq2paMrX7jhIh+UknZas0J102MJhljrrjtCGtOp7QYwRKb1eLKBg0fPnz81q1b
        b5Yr/l9da1Nau4O8z6eK0bePHTt2kuZIMkbWTQiKsOZ0SosQLDHkEmuJS1gtT3YWGSnliK6zKqq9Y8+e
        PW8VFxdvZ64CIchYs6mf0U3aJO0ES5iAccnUjMSlQRdccMFYlTt/087ibLI4XlFR8Q8jRozIY+6NOkAX
        IS5b8F3SRrCEAZt4y0RwybipIdOnT59fU1PzjK6zKaPDQp7qtwsXLlwhHbA65nXZaSM5LQRLbOSyTjxU
        5URpQ0PDu0z4VAR5xrp162qlC1w2ySXllInLvpPsO8ESL7kMnKeUiWRt2rTpIMmHmewpjGNKKn8onQwT
        iMvkJKwDNCVfgi/iK8GSaORml5aW/sAzwQCCcpDbevXqlSP9UDN7SfbNkv0mOJxcMuXs7du3/8g7sQDf
        QsnXz6QjszDiO8m+ESxhMCbmNlluQG5sQHKPHj1GSV+GZG/ilZL4QrDESm7gluOH3PXfS2dYMjHZJF7o
        NCUr9oNgBkBiQJ1rsmU3odLAT4RPJEB0KPG6Rboj8cJAMBRTJydNcqoEG3JZlaFwp7YbunLlyhJly5/b
        JhEgOqSzYyqh6qVDSigMBZ1iOEln1qkSTIwgIWD5kdWZIfn5+XP37t171DaBALGhOvn/FixYwEYFiyGs
        1bOsmXTSlQrBdIb7IFaQGLD8OL6mpuZZ28ADxA8OE+Tk5ORLp2xSsHZNZp2Uq06WYOOaTdylHBqhjPk2
        24ADJI7Kysr7pNORAkmXiccJu+pkCTauGfeBG2GTfuMpsnHQUvhm7dq1VdItx3vJbcwOVEKlUzIER7hm
        SZ7cyhHLIAOkgIaGhqPjxo2bJh0n7aqTIZgniCepyTWXlJTcahtggNRRXl7+U+nY66oTyqoTJdhYL08S
        WXPmtGnTlirzCzYQ0gSFva+WLFmyQbqmdCIcUrEQHn0nmAZNYsWTxLLaqF27dj1uG1gA/6DK5Ne9e/ce
        J31zYpOwGHfClSjBpuZ1EyvVa1dqAO35gFy7wcqVKyulc1a5WAAxtbGvBBvrZZ30gi5duoypqqp60jaY
        1saOHTuc4uJiZ/bs2U5eXp5z4YUXOoMHD3b69evnZGRkOLIGp0+fPs65557rDBw40BkxYoRz8cUXOzNm
        zHBWrFjBkiGu0dp2a6G2tvY3vXr1ypXuSbjituJ4CaYRYq+x3uxFixatJz7YBtPSUJhwicnNzXUJ1PhS
        Rs+ePZ2cnBxH8Y9Ex9pvC+PrVatWUTYlZMXxEkzmHBJ7ZSX3WwbRYqisrHTmzp3rZGdnO6effnoIOekA
        lq6E0rVu23haAvKYT3Xq1Il3oji4hyc1VhxV4iHYWC+ZM28fDJ0wYcI81kxtg0g3rr76amfUqFEhym9p
        DBkyhJjY4m5c/R1X2FmrMbD4YTLqZuvieAk2u0XUvSNV97boJv7evXudhQsXOv379w9RdGuDWE7clmVZ
        x50OyHPeq745HEBdzFpEs6tb8RCMC8AVENgH9+3bN6+uru53ts7TAcV65+yzzw5RbFvDGWec4UyfPt2R
        Xqxz8BN79ux5W2Fpqvplt4nVLVYUo7rpWAR7kyvWQ4epNCK5Svua87Jly5xzzjknRJFtHd27d3cz9zS7
        7hMKDyRbw4WYyVY8BJtlSVzCqNLS0rTuGKl9t6RRX+0WlGBr1661zs8PyE0/oH5GCyS8JL5R3XQsgo17
        xhUMkau8RG4oLe8RNTQ0OJdeemmIoto7SAbJ9m3zTQXS1XuZmZnsF8d0080R7HXPbu2rhGINmZyt01Rw
        5ZVXugmL+uhw6Ny5s7N48WLrvFNBYWEhL7Thps1WojWbjkUwvt1kzxeqRPlzW2fJglg1ceLEEIV0VGDN
        LMjY9JAMtmzZ8ldqNzybTohgs7hBQU1hPUa+/59snSWDsrKydpdEpYouXbq43sqmj0Sh0uxptXmR4F26
        jIjDzRGMT8e34+MzFX8n1NbW+lIeUdO2xOpTW0V+fr5VL4lA5dI78gqXqz0+RYAFKGscbo5gs3rlxt8p
        U6YsU3D/yNZZIjhVXHIsDB8+3F3AsekoHlCqzpkzZ73aMnHYuqoVjWATfwne1FojlSiUqeGvwzuKFywC
        DB06NGSSpzoop1JZ2y4uLuadoQsFciRypYh6OBbBTfXvunXrrrd1Eg8qKio6bJacKk477TTnqquusuot
        FpRo/a3aCK+H4yaYi7mJUwRjSktLD9s6iYX169e7S3lqI0AzSKaUkuE8pnu9u0skxSGJVjSCTQbtrj8L
        F6lg/4Wtk+bAao7uDRAnFFOteoyG6urq53QfR3n4/ExrJt0cwU0rWMI4NfZrWyfRsHz58pDBB4gPBQUF
        Vn3aoLzmdd3DKY+oK1rRCDYlEuk3N+eqRIp7iTIgNzVcdtllVr2GQ6XSH3T9eCFqqRQPwdw8vr6+/g+2
        TsIRkOsP4iGZg/G69hKBI7UcY6asjZtgc/aZmy9RYx/YOvGCg266NoBPmDlzplXPBuLkf3QdBJsTHgkT
        7C5yCJeoKP/Y1onBhg0bQgYXwB9w4MGmbwAnuoYPV0uZ4LxYBHfq1ClkYAH8Q7S9ZV8JjuWidU0TOHLK
        aUfv7wIkj4suusiqc5aO9Xd/COYskK0Tg27dujUNiNUZkgQOpJnfBYgf6M/7/4Q/m84bk6yUCG5KslQm
        /d7WicG2bdtCBgXYNdq5c6fTo0ePiL8FiATbieG/40C/Td8Ao9M1SRMcUiZVV1c/b+vEi40bN4YMDhQW
        Fjr33Xefe4gu/G8BvoXtrDcGYtOzQV1d3RFdl3SZ5F3ouFiWGNd7SLblSV7/+Pzzz5077rjDXXMN//up
        DPSxYMGCiN9zOtOmXy9kdC/o2qQWOiKWKktLS39i68QGG8kTJkxwjh8/7uL+++93Nm3a5AwYMCDiulMB
        zJv5owd2ksL/Hg+5gP0BXW+WKpMiuGmzQQO5ydZJNNhIxg0dOXJEXZ2Ul156ybnpppvcWu+ss86KuL4j
        gfkxT+bLvL/66iv3/8OvS2TDYcuWLXw6ntlswBjj3mww24VsQbnbhXIlu9RoQt8qxlMafjSHbPvpp5+G
        3xB5/vnnnZtvvtlZs2aNk5mZGXJPewXzYD7Mi/kZOXr0qPtKa/j1hDKbHqOhuLj4Wt2X1HahIbhpw3/y
        5MnFKqwT/tIMTizYsuhbb72VuVrl/fffdx555BHn2muvdbNI3t8Nv78tgnEyXsbN+JlHuDz66KNO3759
        I+5dtWqVVX/RsH///i/lykt1b9Ib/ubIDp+bODIjI6NApdLrts5ioaamxjn//PNDJgTkYphzTPnyyy+d
        F154wbnrrrucAwcOuG4svK2WBAs5HNInDDEexsX4GGdzcsMNN0S01bVrV6ekpMSqt+agEund0aNHL1Ib
        SR3ZQbyH3nnpOK+8vPwxW2fxgDPQvFCtdkIwfvx459VXX2X+CcmNN94Y0VZLgNdGP/vss8ZRxCeffPKJ
        U1RUFNEWb0uyTmDTVyxUVVX9Sm1MEJo9/K7uT/7j/hAq4aVSrhKtH9o6SwS8hae2IkCcSlR4897WVrqA
        50hUcNU27xVt+TFebN68+bDauVigBrZm0IiGcPIf94dQIVh7D75/V+RsVuNJn6w04GnGNanNELAY8uab
        b6KXuEWuKqKddAB3nIhg5Vinra3LL7/cqpdEsHTpUr7YI6WD7yYON7260rt374K6uro3bR0mCl6aHjRo
        UMjEAQf0brnlFnQUtxw+fNh9Byi8Lb9w6NChxp7ik4ceesj9yIfwdojdsjyrPhIBmwxDhw7lW09TenWF
        i00cdt8NFi5RQnCXrdNkEc1lT5kyxXnqqafQV1zyxhtvuMuitraSBW8gPPPMM409xBZqfGK0rS0+IKa+
        vt6qg0SxY8eOx9VmzPiLaFgn/3F/iBR8undFa+y8efMqlDD5+uk6PNW2OAUoO9566y30F5fwUNiW/hLB
        pEmTnAcffLCxxdiCO8Yjhe8CAV4KT7QEigWFuANqmwWOqCtYRjS8k/+4P0QKPt1bD+eohpvhl5sOB59i
        Yzs4gNvevn278/rrr6PPuOSVV15xrrvuOkcPZMzP9qAupW8y/Weffbaxhdjy0UcfOQcPHoz6cPLZWyot
        rXNNFso53svOzl6g9ql/WYSyLnAY0TBP/uP+EClWN6369ce2zv0Ab0GMHDkyRFFerF692q05E5Fjx445
        r732mvPkk08699xzj1u33n333c4TTzzhvPzyy86nn37aeGV88vbbb7svdvfq1cs6RrPWbJtfqlDl8Kj6
        wD3zBR4pf4QD4nXT7rp0Xl7eWlZSbAPwCxzgsyUqBhxIu/32250PPvgAnaddvvjiC+eBBx5wQ0a0hI53
        jRJdbkwQJ2bPns2L3zb3nDTBXjftZtPCRAX6hN90SAbELz6CUH1aQYyjvLrzzjudDz/8EC58E2Lrww8/
        7L5+c95551n7ByzFEvdx8bY5+AXF+ee6dOnCRzeYb0tr9vM5EE3j5D/uD3Yxbtp7wiNXE6rShFrsg0ix
        nFhvJ0L21KlT2Sd13fCLL77ofPzxx3AVU3DTrKixhUd/8+fPdz/L0taPAbEXYqnFw8ebBvDpOofUL/u/
        nOAgZFpfGfWKpnbyH/eH6MITQiDnieHJyenatetlPFGWgaQVrNvyjjFkahwxgXWxCUDZxQkJYjiLFuzy
        4E55IFhCxb3a7g8Hu2OsQiX7RmCyULJ2RMkgL3yPEVh4Mosb1uzZSLwE84QQyE2yxRM0fu7cuWwhtsqX
        X1FTUveOHj06brKTBTF32LBhbkae7NpxqpAHw3o5fxXX52MZiZdgxCRbZulytCaerwm3+hc94yL57Ate
        3MrKykr5dVXqWRI86mEsfvfu3dZ+Wwo1NTW/a7Re9n5JdL0vmvlGsLFinhxTMo2XUvmWs7Rm1ImC7UmO
        muKCIZ1VJNw0MZPlQtbBOWFB8oZljh071l21Ip7iev38NJxUId1+vWjRoj3Stdd6zdZg1OTKSKIEe62Y
        IptsbpLq4p/ZBhcgdajufVxxn8yZ2Gs2FuKyXiQRghFjxWafmIx6XGZm5kI2oG0DDJA8OEEj71IsHZM5
        4zHNunNc1oskQzBPDhm1qYv5ype8xYsX79GgUt5KDNCEE8r0b5RuJwrmu4XxnCZzjmm9SKIEIzRM7YWb
        MKtbuI/J27Zte9Ay0ABJoKKi4iklsQXS61iBVSvWIPCcMTNnryRDMIJ78CZclE25gwcPXqgEp9lXXALE
        hkrA/x4zZswq6RTXTGLFuTiz5xu39SLJEmxcNe6CxQ92mlxXrWx0y759+/5kG3iA2FDW/JXq7d3S5aUC
        rtl8VxIes9lVK5skSzBiXDVLmLhqtzYWJhYVFR1ioLYJBGgW36ie51vAJwuEPfbg2VBAx3EnVl5JhWDE
        66rJqokVFOOT169fH3zVbIIoKSm5R7qjJCLuUqGYrDlh12wkVYKNq2YAFN8U4QyMAeZv3rz5p7aJBIhE
        WVnZY0qq+KZR3jWiJDJxl4olKXKRVAlGjKs28ZiBMcDcrl27Tldm7dtHEHdUkDH36dNnrnTGq6Dmm0ZN
        SZRw3PWKHwQjhmQSAQbGADlxQBY4devWrQHJUbBjxw5DLkuR7LWnlFSFiy8Ea6D8h3hsSGaAFOYuyd26
        dZsRLGdGYvv27Y/37duX468cwSFjZk0hPKlqMwQzEJN0McAQkoWpSrxu17XBapegB/5exdwZ0guWa8hl
        MSOlpCpcfCMYSJojmeQhf9WqVde31tfitQVQPl5xxRV/KV3w5VbE3LSRi/hKMJAwMAboJZmYTOJFdj15
        2rRpZZxQMJM+VVBfX//HuXPn1kgHlEI88CRUxFzcsu/kIr4TDCReSzaJF9k1JRR18sRBgwYtUYb9iK4/
        JVy2kql/zcnJWa25TxJ40HngefAxAAzBd3KRtBAMJIZkk3hRQlEnsxjCihexp2Dp0qUH9WS/p3usimnv
        aGho+HjNmjU/YK4CyRQrVHxoCg88Dz66wRB8JxdJG8FA4iWZmo7FEFa8WNbEPeGmJo8YMWJlSUnJ/W3t
        ZEgq4CSGsuTHcnNzr9Icpwi86kkZRLxFByximDoXHflOLpJWgg0kDJ6JsCpDrGHtGvfELhRPNE/21Fmz
        Zu3etWvXC7rHqrT2gurq6lcXLly4V3MyVktYYq4knCbeogt0gm7SQi7SIgQDCZPwJl+4bNZaeaKxZk7r
        T+rZs+fsxYsXf2/37t0v6z6rAtsqampqjhQVFV2v2na+5sKGAR4Kq2XTgPCESw6Jt7pP/0mftBjBQALJ
        XpfttWYSMGIzNfOUbt26QfTBioqKX+LudL9VqW0AJ+R1nl++fPl1GRkZvBRGhkz5w1yYE3PDaglPzJkH
        3HXJutfoJW3SogQbSIw18ySbBIy4RMlAdonbRklTOnfuPDM/P7+stLT053V1de/ofpuSWxxKDN9lJWrm
        zJlVZ5555iyNFWJJHHHHbNKTZzAn5haeJTeRC9IprUIwkHitmXjEcRRcGK4M5RiisWhKiwKVVssWLVr0
        PcqrPXv2HFU7VuWnC7xZX1ZW9ovCwsI/y87O5sQFMRZXzBgZK8QScpgD5Y831oZYrRfplFYj2EDijc3G
        baMcQzTJCas9xGgshIy0oH///kvnzJlTv27dusOVlZW/knX/cd++fb59MzkrTlip3O9zGzdu/MmCBQv2
        8YCpb7b0GAPJE2Pi6DBjZKyGWK87boq10ZBOaXWCgcR1W0I40Vg0bo44Rv2MhRDbDNlYD0t+07OyslZO
        nTp1B7Fw/fr1d8jS/lnk/IcSnzdE1Duy+A+wQI6iAn7md6wu1dbWvlFVVfWb8vLyf9mwYcOPV6xYccO0
        adMqVL6tUdusF9MHfRlSGQPLr4yJzJhk0Vist66NarVepFN8IdhHsRGN66ZmJBnDQlCoIRvL5pNmqDFR
        Pq6cWAghWNp0AYJmCrz6YQN/4xqu5R7upQ3aok3apg/6ok/6JldgLCRPxFjG6LVYl1ih1aWtEWzESzTx
        yyRjWAgKhWysBssm5rEyhPIpSbAuEh0sjTKF+EjCBrD6cPB7ruFa7uFe2qAt2iQTpg/6ok9IxbMYa2Vs
        jJGxmnG3GWmrBHsFhWERxqq9ZGPZuEaUjvI5iI+FEw+pPbE2yIck4qQN/I1ruJZ7uJc2aMsQSh/0ZUgl
        cWpz1mqT9kCwV7xkG8vGNaJ03CTJDRaOhUEKlg5BbMURy23gb1wDuJ57aYO2DKH04bVUQ2qbJdZIeyPY
        K0bBXsKNhWNhhnhAHdoczHXcw720QVvtjtBwac8Eh4shwJBuiE8E5j5vW+1aOhLBgVgkILiDS0BwBxfH
        cb7z/y5x4MIcfC6uAAAAAElFTkSuQmCC
</value>
  </data>
</root>